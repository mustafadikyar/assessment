// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rise.Assessment.Phonebook.Infrastructure;

namespace Rise.Assessment.Phonebook.Infrastructure.Migrations
{
    [DbContext(typeof(PhonebookDbContext))]
    partial class PhonebookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rise.Assessment.Phonebook.Domain.PhonebookAggregate.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person", "phonebook");
                });

            modelBuilder.Entity("Rise.Assessment.Phonebook.Domain.PhonebookAggregate.PersonDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonDetails", "phonebook");
                });

            modelBuilder.Entity("Rise.Assessment.Phonebook.Domain.PhonebookAggregate.PersonDetail", b =>
                {
                    b.HasOne("Rise.Assessment.Phonebook.Domain.PhonebookAggregate.Person", null)
                        .WithMany("PersonDetails")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Rise.Assessment.Phonebook.Domain.PhonebookAggregate.Person", b =>
                {
                    b.Navigation("PersonDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
